rule dt_recon:
  input:
    dti="data/mri_dataset/{subject}/ses-01/dwi/dti.mgz",
    bvals="data/mri_dataset/{subject}/ses-01/dwi/dti.bvals",
    bvecs="data/mri_dataset/{subject}/ses-01/dwi/dti.scanner_space.bvecs"
  output:
    "data/mri_processed_data/{subject}/dti/tensor.nii.gz",
    "data/mri_processed_data/{subject}/dti/fa.nii.gz",
    "data/mri_processed_data/{subject}/dti/adc.nii.gz",
  shell:
    "SUBJECTS_DIR=data/mri_processed_data/freesurfer"
    " dt_recon --i {input.dti} --b {input.bvals} {input.bvecs}"
    " --s {wildcards.subject} --o $(dirname {output[0]})"
    

rule dilated_mask:
  input:
    "data/mri_processed_data/freesurfer/{subject}/mri/wmparc.mgz"
  output: 
    "data/mri_processed_data/{subject}/mask_dilated.mgz"
  shell:
    "mri_binarize --i {input} --gm --dilate 2 --o {output}"


rule clean_dti:
  input:
    dtifile = "data/mri_processed_data/{subject}/dti/tensor.nii.gz",
    maskfile = "data/mri_processed_data/{subject}/mask_dilated.mgz"
  output:
    dtifile = "data/mri_processed_data/{subject}/dti/{subject}_dti-tensor_clean.nii.gz",
  shell:
    "python gmri2fem/dti/clean_dti_data.py"
    " --dti {input.dtifile}"
    " --mask {input.maskfile}"
    " --out {output}"


rule dti2hdf:
  input:
    meshfile = "data/mri_processed_data/{subject}/modeling/resolution{res}/mesh.hdf",
    dtifile= "data/mri_processed_data/{subject}/dti/{subject}_dti-tensor_clean.nii.gz"
  output:
    "data/mri_processed_data/{subject}/modeling/resolution{res}/dti.hdf"
  shell:
    "python gmri2fem/dti/dti_data_to_mesh.py"
    " --dti {input.dtifile}"
    " --mesh {input.meshfile}"
    " --out {output}"

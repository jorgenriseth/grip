rule concentration_estimate:
  input:
    image="data/mri_processed_data/{subject}/T1maps/{subject}_{session}_T1map.nii.gz",
    reference="data/mri_processed_data/{subject}/T1maps/{subject}_ses-01_T1map.nii.gz",
    mask="data/mri_processed_data/{subject}/{subject}_mask-intracranial.nii.gz"
  output:
    "data/mri_processed_data/{subject}/concentrations/{subject}_{session}_concentration.nii.gz"
  shell:
    "python gmri2fem/mriprocessing/estimate_concentration.py"
      " --input {input.image}"
      " --reference {input.reference}"
      " --output {output}"
      " --r1 0.0045"
      " --mask {input.mask}"

rule create_refroi:
  input: 
    T1w = lambda wc: [
      f"data/mri_processed_data/{{subject}}/registered/{{subject}}_{session}_T1w_registered.nii.gz"
      for session in SESSIONS[wc.subject]
    ],
    segmentation= "data/mri_processed_data/{subject}/{subject}_aparc+aseg_refined.nii.gz",
  output:
    "data/mri_processed_data/{subject}/{subject}_refroi-left-orbital.nii.gz",
    "data/mri_processed_data/{subject}/{subject}_refroi-right-orbital.nii.gz",
  shell:
    "python gmri2fem/mriprocessing/orbital_refroi.py"
      " --T1w_dir $(dirname '{input.T1w[0]}')"
      " --segmentation {input.segmentation}"
      " --output {output[0]}"
      " --side 'left' && "
    "python gmri2fem/mriprocessing/orbital_refroi.py"
      " --T1w_dir $(dirname '{input.T1w[0]}')"
      " --segmentation {input.segmentation}"
      " --output {output[1]}"
      " --side 'right'"


rule normalize_T1w:
    input:
        image="data/mri_processed_data/{subject}/registered/{subject}_{session}_T1w_registered.nii.gz",
        refroi="data/mri_processed_data/{subject}/{subject}_refroi-left-orbital.nii.gz",
    output:
        "data/mri_processed_data/{subject}/T1w_normalized/{subject}_{session}_T1w_normalized.nii.gz"
    shell:
        "python gmri2fem/mriprocessing/normalize_images.py"
        " --image {input.image}"
        " --refroi {input.refroi}"
        " --output {output}"


rule T1map_literature:
    input:
        "data/mri_processed_data/freesurfer/{subject}/mri/aseg.mgz"
    output:
        t1map_synth = "data/mri_processed_data/{subject}/t1map_literature.mgz",
        brainmask = "data/mri_processed_data/{subject}/brainmask.mgz"
    shell:
        "python gmri2fem/mriprocessing/t1maps.py"
        " --aseg {input}"
        " --t1map {output.t1map_synth}"
        " --mask {output.brainmask}"

rule T1maps_T1w_estimated:
    input:
        T1w="data/mri_processed_data/{subject}/T1w_normalized/{subject}_{session}_T1w_normalized.mgz",
        T1w0="data/mri_processed_data/{subject}/T1w_normalized/{subject}_ses-01_T1w_normalized.mgz",
        T1map0="data/mri_processed_data/{subject}/t1map_literature.mgz"
    output:
        "data/mri_processed_data/{subject}/T1map_T1w/{subject}_{session}_T1map_T1w.mgz"
    shell:
        "python gmri2fem/mriprocessing/estimate_t1maps.py"
        " --inputT1w {input.T1w}"
        " --referenceT1w {input.T1w0}"
        " --referenceT1map {input.T1map0}"
        " --output {output}"


rule concentration_estimate_T1w: 
    input:
        image="data/mri_processed_data/{subject}/T1map_T1w/{subject}_{session}_T1map_T1w.mgz",
        reference="data/mri_processed_data/{subject}/T1map_T1w/{subject}_ses-01_T1map_T1w.mgz",
        mask="data/mri_processed_data/{subject}/brainmask.mgz",
    output:
        "data/mri_processed_data/{subject}/concentrations/{subject}_{session}_concentration_T1w.mgz"
    shell:
        "python gmri2fem/mriprocessing/estimate_concentration.py"
        " --input {input.image}"
        " --reference {input.reference}"
        " --output {output}"

rule extract_concentration_times_T1w:
   input:
       timetable="data/mri_dataset/timetable.csv"
   output:
       "data/mri_processed_data/{subject}/timestamps_T1w.txt",
   shell:
       "python gmri2fem/mriprocessing/extract_timestamps.py"
       " --timetable {input}"
       " --subject {wildcards.subject}"
       " --sequence_label T1w"
       " --output {output}"


rule extract_concentration_times_LL:
   input:
       timetable="data/mri_dataset/timetable.csv"
   output:
       "data/mri_processed_data/{subject}/timestamps_LL.txt"
   shell:
       "python gmri2fem/mriprocessing/extract_timestamps.py"
       " --timetable {input}"
       " --subject {wildcards.subject}"
       " --sequence_label looklocker"
       " --output {output}"
